#!/system/bin/sh
#
# Recovery boot script for Xperia Z1 Compact by Munjeni @ 2014
# Do not remove header, thanks & Enjoy!
#

set +x
OLD_PATH="$PATH"
export PATH="/system/xbin:/system/bin:/system/etc:/sbin:/things"

CHARGEMONLOG="/data/local/tmp/chargemon.log"
rm $CHARGEMONLOG

TIMING_TRICK_FOR_RIC() {
  echo "$*" >> ${CHARGEMONLOG}
  $* 2>&1 >> ${CHARGEMONLOG}
  _RET=$?
  echo "RET=${_RET}" >> ${CHARGEMONLOG}
  return ${_RET}
}

# disable selinux
insmod /system/lib/modules/byeselinux.ko

# install custom kernel modules
#insmod /system/lib/modules/cpufreq_lionheart.ko
#insmod /system/lib/modules/usbserial.ko
#insmod /system/lib/modules/ftdi_sio.ko
#insmod /system/lib/modules/sdcardfs.ko

if [ ! -f /sbin/chargemon ]; then

  # fix for system ro bug in CWM mode
  /system/etc/busybox blockdev --setrw /dev/block/platform/msm_sdcc.1/by-name/system
  
  TIMING_TRICK_FOR_RIC /system/etc/busybox mount -o remount,rw rootfs /
  TIMING_TRICK_FOR_RIC /system/etc/busybox mount -o remount,rw /system

  # store things here
  /system/etc/busybox mkdir /things
  /system/etc/busybox chcon u:object_r:system_file:s0 /tnings
  
  # copy busybox
  /system/etc/busybox cp -fr /system/etc/busybox /things/busybox
  /system/etc/busybox chown 0.0 /things/busybox
  /system/etc/busybox chmod 04755 /things/busybox
  /system/etc/busybox chcon u:object_r:system_file:s0 /tnings/busybox
  
  # check if ric is stock, if yes than rename ric to ric.bak & create new ric
  if [ -f /sbin/ric ]; then
    /things/busybox dd if=/sbin/ric of=/sbin/ric.bin bs=1 count=3 skip=1
		/things/busybox chcon u:object_r:rootfs:s0 /sbin/ric.bin
    [ "`/things/busybox cat /sbin/ric.bin`" = "ELF" ] && /things/busybox mv /sbin/ric /sbin/ric.bak
    /things/busybox rm -rf /sbin/ric.bin
  fi
  
  # create a new ric
  /things/busybox echo "`/things/busybox printf '\x23\x21\x2F\x74\x68\x69\x6E\x67\x73\x2F\x62\x75\x73\x79\x62\x6F\x78\x20\x73\x68'`" > /sbin/ric
  /things/busybox echo "" >> /sbin/ric
  /things/busybox echo "echo 0 > /sys/kernel/security/sony_ric/enable" >> /sbin/ric
  /things/busybox echo "mount -o remount,rw /" >> /sbin/ric
  /things/busybox echo "echo '#!things/busybox sh' >/sbin/ric" >> /sbin/ric
  /things/busybox echo "mount -o remount,ro /" >> /sbin/ric
  /things/busybox echo "rmmod byeselinux" >> /sbin/ric
  /things/busybox echo "exit 0" >> /sbin/ric

  /things/busybox chown 0.0 /sbin/ric
  /things/busybox chmod 755 /sbin/ric
  /things/busybox chcon u:object_r:rootfs:s0 /sbin/ric
  
  # check if mr is stock, if yes than rename mr to mr.stock & create new mr
  if [ -f /system/bin/mr ]; then
    /things/busybox dd if=/system/bin/mr of=/sbin/mr.bin bs=1 count=3 skip=1
    /things/busybox chcon u:object_r:system_file:s0 /sbin/mr.bin
    [ "`/things/busybox cat /sbin/mr.bin`" = "ELF" ] && /things/busybox mv /system/bin/mr /system/bin/mr.stock
    /things/busybox chcon u:object_r:system_file:s0 /sbin/mr.stock
    /things/busybox rm -rf /sbin/mr.bin
  fi
  
  # create a new mr
  /things/busybox echo "`/things/busybox printf '\x23\x21\x2F\x73\x79\x73\x74\x65\x6D\x2F\x62\x69\x6E\x2F\x73\x68'`" > /system/bin/mr
  /things/busybox echo "" >> /system/bin/mr
  /things/busybox echo "# MR Wrapper, part of XZDualRecovery" >> /system/bin/mr
  /things/busybox echo "# This will make sure the command file survives if it exists." >> /system/bin/mr
  /things/busybox echo "# Patched to work by Tungstwenty from XDA, thanks bro!" >> /system/bin/mr
  /things/busybox echo "" >> /system/bin/mr
  /things/busybox echo 'if [ -f "/cache/recovery/command" ]; then' >> /system/bin/mr
  /things/busybox echo "        /system/xbin/busybox cp -fr /cache/recovery/command /cache/recovery/command.xzdr" >> /system/bin/mr
  /things/busybox echo "fi" >> /system/bin/mr
  /things/busybox echo "" >> /system/bin/mr
  /things/busybox echo "/system/bin/mr.stock" >> /system/bin/mr
  /things/busybox echo 'ECOD=$?' >> /system/bin/mr
  /things/busybox echo "" >> /system/bin/mr
  /things/busybox echo 'if [ -f "/cache/recovery/command.xzdr" ] && [ ! -f "/cache/recovery/command" ]; then' >> /system/bin/mr
  /things/busybox echo "        /system/xbin/busybox mv /cache/recovery/command.xzdr /cache/recovery/command" >> /system/bin/mr
  /things/busybox echo "fi" >> /system/bin/mr
  /things/busybox echo "" >> /system/bin/mr
  /things/busybox echo 'exit $ECOD' >> /system/bin/mr
  
  /things/busybox chown 0.2000 /system/bin/mr
  /things/busybox chmod 755 /system/bin/mr
  /things/busybox chcon u:object_r:system_file:s0 /system/bin/mr

  # self copy our script and change /system/bin/sh /things/busybox sh since we need to umount system which will be bussy if script use sh from system partition!
  /things/busybox cp -fr /system/bin/chargemon /sbin/chargemon
  /things/busybox chown 0.2000 /sbin/chargemon
	/things/busybox chmod 755 /sbin/chargemon
  # replace string
  /things/busybox sed -i 's/system\/bin\/sh/things\/busybox sh/g' /sbin/chargemon
  /things/busybox chcon u:object_r:system_file:s0 /sbin/chargemon

  # flag to indicate if copied cript is not executed
  /things/busybox echo "" > /no_executed
  /things/busybox chcon u:object_r:system_file:s0 /no_executed

  export PATH="${OLD_PATH}"

fi

# execute self copied script | skip our call if called from self copied script to prevent loop
if [ -f /sbin/chargemon ]; then
  if [ -f /no_executed ]; then
    /things/busybox rm -rf /no_executed
    exec /sbin/chargemon
    exit 0
  fi
fi

setled() {
  if [ "$1" = "blink" ]; then
    a=0
    while [ $a -lt 10 ]
    do
      /things/busybox echo "$2" > /sys/class/leds/led:rgb_red/brightness
      /things/busybox echo "$3" > /sys/class/leds/led:rgb_green/brightness
      /things/busybox echo "$4" > /sys/class/leds/led:rgb_blue/brightness
      /things/busybox usleep 100000
      /things/busybox echo 0 > /sys/class/leds/led:rgb_red/brightness
      /things/busybox echo 0 > /sys/class/leds/led:rgb_green/brightness
      /things/busybox echo 0 > /sys/class/leds/led:rgb_blue/brightness
      /things/busybox usleep 100000
      a=`/things/busybox expr $a + 1`
    done
  elif [ "$1" = "on" ]; then
    /things/busybox echo "$2" > /sys/class/leds/led:rgb_red/brightness
    /things/busybox echo "$3" > /sys/class/leds/led:rgb_green/brightness
    /things/busybox echo "$4" > /sys/class/leds/led:rgb_blue/brightness
    /things/busybox usleep 2000000
  else
    /things/busybox echo "0" > /sys/class/leds/led:rgb_red/brightness
    /things/busybox echo "0" > /sys/class/leds/led:rgb_green/brightness
    /things/busybox echo "0" > /sys/class/leds/led:rgb_blue/brightness
  fi
}

# triger keys & blink blue
/things/busybox cat /dev/input/event4 > /dev/keycheck &

setled blink 0 0 255

# trigger vibration
/things/busybox echo '200' > /sys/class/timed_output/vibrator/enable

/things/busybox usleep 500000
kill -9 $!

if [ -s /dev/keycheck ] || [ -f /cache/recovery/boot ] || [ -e /cache/recovery/command ]; then

  /things/busybox rm -rf /cache/recovery/boot

  # blue light to indicate we are booting into recovery
  setled on 0 0 255
  setled off

	for SVCRUNNING in $(getprop | /things/busybox grep -E '^\[init\.svc\..*\]: \[running\]'); do
		SVCNAME=$(/things/busybox expr ${SVCRUNNING} : '\[init\.svc\.\(.*\)\]:.*')
		stop ${SVCNAME}
	done

  kill -9 $(ps | /things/busybox grep rmt_storage | /things/busybox grep -v "grep" | /things/busybox awk -F' ' '{print $2}')

  ### debug - to check if there is no things runing from /system ; Note - if there is a thing from system our
  ### script will not work corectly since system unmount will fail! If something fail simple uncoment lines and check ps.log for proccesses from system partition
  # /things/busybox ps > /data/local/tmp/ps.log
  # /things/busybox chmod 777 /data/local/tmp/ps.log 

  /things/busybox umount -l /acct
  /things/busybox umount -l /dev/cpuctl
  /things/busybox umount -l /dev/pts
  /things/busybox umount -l /mnt/asec
  /things/busybox umount -l /mnt/obb
  /things/busybox umount -l /mnt/qcks
  /things/busybox umount -l /mnt/idd
  /things/busybox umount -l /data/idd
  /things/busybox umount -l /data
  /things/busybox umount -l /lta-label
  /things/busybox umount -l /storage/sdcard1
  /things/busybox umount -l /cache
  /things/busybox umount -l /proc
  /things/busybox umount -l /sys

  # copy recovery
  /things/busybox mkdir /recovery
  /things/busybox chcon u:object_r:system_file:s0 /recovery

  if /things/busybox cat /dev/keycheck | /things/busybox tail -2 | /things/busybox hexdump | /things/busybox grep "0001 0072"; then
    /things/busybox cp -fr /system/bin/recovery.munjeni.gz /recovery/recovery.munjeni.gz
  elif /things/busybox cat /dev/keycheck | /things/busybox tail -2 | /things/busybox hexdump | /things/busybox grep "0001 0073"; then
    /things/busybox cp -fr /system/bin/recovery.twrp.gz /recovery/recovery.munjeni.gz
  else
    /things/busybox cp -fr /system/bin/recovery.munjeni.gz /recovery/recovery.munjeni.gz
  fi
  /things/busybox chcon u:object_r:system_file:s0 /recovery/recovery.munjeni.gz
  cd /recovery

  /things/busybox umount -l /system

  /things/busybox gunzip < recovery.munjeni.gz | /things/busybox cpio -i -d
  /things/busybox rm -rf /dev/keycheck
  /things/busybox chroot /recovery /init

fi

#==========================================================================================================================
# continue normal booting

/things/busybox rm -rf /dev/keycheck

# create init.d folder if not exist
/things/busybox mkdir -p /system/etc/init.d
/things/busybox chcon u:object_r:system_file:s0 /system/etc/init.d

# disable sony ric security
TIMING_TRICK_FOR_RIC /things/busybox mount -t securityfs securityfs -o nosuid,nodev,noexec /sys/kernel/security
TIMING_TRICK_FOR_RIC /things/busybox mkdir -p /sys/kernel/security/sony_ric
TIMING_TRICK_FOR_RIC /things/busybox chmod 755 /sys/kernel/security/sony_ric
TIMING_TRICK_FOR_RIC /things/busybox echo 0 > /sys/kernel/security/sony_ric/enable

# run crond
/things/busybox mkdir -p /system/etc/cron.d/crontabs
/things/busybox chcon u:object_r:system_file:s0 /system/etc/cron.d
/things/busybox chcon u:object_r:system_file:s0 /system/etc/cron.d/crontabs
if [ ! -f /system/etc/cron.d/crontabs/root ]; then
    /things/busybox echo -e "# This example will delete crontab.log every 2 day at 01:15 PM\n#15 1 * * */2 echo -e \"\\\n\\\n\`date +%c\`\\\nremoved crontab log.\" >> /data/local/tmp/crontab.log ; rm /data/local/tmp/crontab.log" >/system/etc/cron.d/crontabs/root
    /things/busybox echo -e "#\n# This example will drop memory cache every 30 minutes\n#*/30 * * * * echo -e \"\\\n\\\n\`date +%c\`\\\nmemory cache droped.\" >> /data/local/tmp/crontab.log ; sync ; echo 3 > /proc/sys/vm/drop_caches ; sleep 3 ; echo 1 > /proc/sys/vm/drop_caches" >>/system/etc/cron.d/crontabs/root
    /things/busybox chown 0.0 /system/etc/cron.d/crontabs/root
    /things/busybox chmod 0644 /system/etc/cron.d/crontabs/root
    /things/busybox chcon u:object_r:system_file:s0 /system/etc/cron.d/crontabs/root
fi
if [ ! -f /system/etc/passwd ]; then
    /things/busybox echo "root:x:0:0::/system/etc/cron.d:/system/bin/sh" >/system/etc/passwd
    /things/busybox chown 0.0 /system/etc/passwd
    /things/busybox chmod 0644 /system/etc/passwd
    /things/busybox chcon u:object_r:system_file:s0 /system/etc/passwd
fi
if [ ! -f /system/etc/shadow ]; then
    /things/busybox echo "root:*:12410:0:99999:7:::" >/system/etc/shadow
    /things/busybox chown 0.0 /system/etc/shadow
    /things/busybox chmod 0644 /system/etc/shadow
    /things/busybox chcon u:object_r:system_file:s0 /system/etc/shadow
fi
if [ ! -f /system/etc/group ]; then
    /things/busybox echo "root:x:0:root" >/system/etc/group
    /things/busybox chown 0.0 /system/etc/group
    /things/busybox chmod 0644 /system/etc/group
    /things/busybox chcon u:object_r:system_file:s0 /system/etc/group
fi
if /things/busybox test -f /bin/sh
then
    echo "/bin/sh exist."
else
    /things/busybox ln -s /system/bin /bin
    /things/busybox chown -h 0.2000 /bin
    /things/busybox chcon -h u:object_r:system_file:s0 /bin
fi
if [ ! -L /system/etc/cron.d/crontab.log ]; then
    cd /system/etc/cron.d ; /things/busybox ln -s /data/local/tmp/crontab.log ./crontab.log ; cd /
    /things/busybox chcon -h u:object_r:system_file:s0 /system/etc/cron.d/crontab.log
fi

# run init.d scripts
/things/busybox run-parts /system/etc/init.d &

# fix lights snifer on lolipop
/things/busybox chmod 666 /sys/class/leds/wled:backlight/max_current

# remount ro
TIMING_TRICK_FOR_RIC /things/busybox mount -o remount,ro rootfs /
TIMING_TRICK_FOR_RIC /things/busybox mount -o remount,ro /system

# red light to indicate we are booting into android
setled on 255 0 0
setled off

export PATH="${OLD_PATH}"

exec /system/bin/chargemon.stock

exit 0
